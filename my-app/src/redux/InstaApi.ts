import { createApi, fetchBaseQuery } from "@reduxjs/toolkit/query/react";

// const BASE_URL = "https://instagram-nrdh.onrender.com/api/";
const BASE_URL = "http://localhost:4000/api";

export const InstaApis = createApi({
  reducerPath: "api",
  baseQuery: fetchBaseQuery({
    baseUrl: BASE_URL,
    credentials: "include",
  }),

  tagTypes: ["USER", "POST"],
  endpoints: (builder) => ({
    postNewUser: builder.mutation({
      query: (credentials) => ({
        url: "/user-registration",
        method: "post",
        headers: { "Content-Type": "application/json" },
        body: credentials,
      }),
      invalidatesTags: ["USER"],
    }),
    loginUser: builder.mutation({
      query: (credentials) => ({
        url: "/user-login",
        method: "post",
        headers: { "Content-Type": "application/json" },
        body: credentials,
      }),
      invalidatesTags: ["USER"],
    }),

    getAllPosts: builder.query({
      query: ({ skip = 0, limit = 10 }) => `/posts?skip=${skip}&limit=${limit}`,
      providesTags: ["POST"],
    }),
    getUserById: builder.query({
      query: (userId) => ({
        url: `/get-user-profile/${userId}`,
        method: "get",
        params: { userId },
      }),
      providesTags: ["USER"],
    }),
    changeUserInfo: builder.mutation({
      query: (data) => ({
        url: "/change-profile-info",
        method: "post",
        headers: { "Content-Type": "application/json" },
        body: data,
      }),
      invalidatesTags: ["USER"],
    }),
    changeProfilePic:builder.mutation({
      query:(data)=>({
        url:"/change-profile",
        method:"post",
        headers:{ "Content-Type": "application/json" },
        body:data
      })
      ,invalidatesTags:["USER"]
    })
  }),
});

// Export hooks generated by createApi for the endpoints
export const {
  useGetUserByIdQuery,
  useGetAllPostsQuery,
  useLoginUserMutation,
  usePostNewUserMutation,
  useChangeUserInfoMutation,
  useChangeProfilePicMutation,
} = InstaApis;
